plugins {
    id "net.minecraftforge.gradle"
    id "org.spongepowered.mixin"
}

minecraft {
    mappings channel: "official", version: minecraft_version
    copyIdeResources = true

    runs {
        // applies to all the run configs below
        configureEach {
            workingDirectory project.file("run")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"

            mods {
                "$mod_id" {
                    source sourceSets.main
                    source project(":tuber").sourceSets.main
                    source project(":shared").sourceSets.main
                }
            }
        }

        client {
            property "forge.enabledGameTestNamespaces", mod_id
        }

        server {
            property "forge.enabledGameTestNamespaces", mod_id
        }

        gameTestServer {
            property "forge.enabledGameTestNamespaces", mod_id
        }

        data {
            args "--mod", mod_id, "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources/")
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"

    implementation project(":shared")
    implementation project(":tuber")

    // compile against the API
    compileOnly fg.deobf("mcp.mobius.waila:wthit-api:forge-8.4.3")

//    // run against the full jar
//    runtimeOnly fg.deobf("mcp.mobius.waila:wthit:forge-5.13.4")
//    runtimeOnly fg.deobf("lol.bai:badpackets:forge-0.3.3")

    compileOnly fg.deobf("curse.maven:jade-324717:4800904")
    runtimeOnly fg.deobf("curse.maven:jade-324717:4800904")

    compileOnly fg.deobf("curse.maven:the-one-probe-245211:3965693")
//    runtimeOnly fg.deobf("curse.maven:the-one-probe-245211:3965693")

    compileOnly fg.deobf("curse.maven:project-mmo-353935:4383165") // https://github.com/Caltinor/Project-MMO-2.0
//    runtimeOnly fg.deobf("curse.maven:project-mmo-353935:4383165")

    compileOnly fg.deobf("curse.maven:carry-on-274259:4160388")
//    runtimeOnly fg.deobf("curse.maven:carry-on-274259:4160388")

    compileOnly fg.deobf("curse.maven:multi-mine-227887:4667519")
//    runtimeOnly fg.deobf("curse.maven:multi-mine-227887:4667519")

//    runtimeOnly fg.deobf("curse.maven:create-328085:4835191")
//    runtimeOnly fg.deobf("curse.maven:terrablender-563928:4618490")
//    runtimeOnly fg.deobf("curse.maven:regions-unexplored-659110:4807303")
//    runtimeOnly fg.deobf("curse.maven:biomes-o-plenty-220318:4473556")
//    runtimeOnly fg.deobf("curse.maven:enhanced-farming-285105:4280679")

//    runtimeOnly fg.deobf("curse.maven:placebo-283644:4876369")
//    runtimeOnly fg.deobf("curse.maven:apotheosis-313970:4876447")

//    runtimeOnly fg.deobf("curse.maven:selene-499980:4410933")
//    runtimeOnly fg.deobf("curse.maven:immersive-weathering-forge-592449:4401359")

//    runtimeOnly fg.deobf("curse.maven:structure-gel-api-378802:4029363")
//    runtimeOnly fg.deobf("curse.maven:blue-skies-312918:3966273")
//    runtimeOnly fg.deobf("curse.maven:caupona-656147:4036587")

//    runtimeOnly fg.deobf("curse.maven:mutil-351914:3941314")
//    runtimeOnly fg.deobf("curse.maven:tetra-289712:4379764")

    // compileOnly fg.deobf("curse.maven:silent-lib-242998:3968715")
    // compileOnly fg.deobf("curse.maven:silent-gear-297039:4397693")

//    runtimeOnly fg.deobf("curse.maven:citadel-331936:4848887")
//    runtimeOnly fg.deobf("curse.maven:alexs-caves-924854:4952948")

//    runtimeOnly fg.deobf("curse.maven:the-twilight-forest-227639:4865711")
}

sourceSets.main.resources {
    srcDir "src/generated/resources"
}

processResources {
    from project(":shared").sourceSets.main.resources

    filesMatching(["META-INF/mods.toml", "pack.mcmeta"]) {
        expand project.properties
    }
}

mixin {
    add(sourceSets.main, "${mod_id}.mixins.refmap.json")
    config "${mod_id}.mixins.json"
    config "${mod_id}.forge.compat.mixins.json"
}

tasks.withType(JavaCompile) {
    source(project(":shared").sourceSets.main.allSource)
    source(project(":tuber").sourceSets.main.allSource)
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy("reobfJar")
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn("reobfJar")